name: Generate RULE-SET from OpenCCK Lists
on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"  # Ежедневно в 6:00 UTC
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "opencck_porno=https://iplist.opencck.org/?format=text&data=domains&group=porn" >> $GITHUB_ENV
          echo "opencck_discord=https://iplist.opencck.org/?format=text&data=domains&group=discord" >> $GITHUB_ENV
          echo "opencck_youtube=https://iplist.opencck.org/?format=text&data=domains&group=youtube" >> $GITHUB_ENV
          echo "opencck_socials=https://iplist.opencck.org/?format=text&data=domains&group=socials" >> $GITHUB_ENV
          echo "opencck_torrent=https://iplist.opencck.org/?format=text&data=domains&group=torrent" >> $GITHUB_ENV
          echo "opencck_tools=https://iplist.opencck.org/?format=text&data=domains&group=tools" >> $GITHUB_ENV
          echo "opencck_music=https://iplist.opencck.org/?format=text&data=domains&group=music" >> $GITHUB_ENV
        shell: bash

      - name: Checkout the main branch
        uses: actions/checkout@v5

      - name: Generate porno.txt file
        run: |
          echo "payload:" > porno.txt
          curl -sSL ${opencck_porno} | grep -v '^#' | grep -v '^$' | while IFS= read -r domain; do
            if [[ $domain =~ ^www\. ]]; then
              echo "  - '${domain}'" >> porno.txt
              echo "  - '+.${domain#www.}'" >> porno.txt
            else
              echo "  - '+.${domain}'" >> porno.txt
            fi
          done

      - name: Generate discord.txt file
        run: |
          echo "payload:" > discord.txt
          curl -sSL ${opencck_discord} | grep -v '^#' | grep -v '^$' | while IFS= read -r domain; do
            if [[ $domain =~ ^www\. ]]; then
              echo "  - '${domain}'" >> discord.txt
              echo "  - '+.${domain#www.}'" >> discord.txt
            else
              echo "  - '+.${domain}'" >> discord.txt
            fi
          done

      - name: Generate youtube.txt file
        run: |
          echo "payload:" > youtube.txt
          curl -sSL ${opencck_youtube} | grep -v '^#' | grep -v '^$' | while IFS= read -r domain; do
            if [[ $domain =~ ^www\. ]]; then
              echo "  - '${domain}'" >> youtube.txt
              echo "  - '+.${domain#www.}'" >> youtube.txt
            else
              echo "  - '+.${domain}'" >> youtube.txt
            fi
          done

      - name: Generate socials.txt file
        run: |
          echo "payload:" > socials.txt
          curl -sSL ${opencck_socials} | grep -v '^#' | grep -v '^$' | while IFS= read -r domain; do
            if [[ $domain =~ ^www\. ]]; then
              echo "  - '${domain}'" >> socials.txt
              echo "  - '+.${domain#www.}'" >> socials.txt
            else
              echo "  - '+.${domain}'" >> socials.txt
            fi
          done

      - name: Generate torrent.txt file
        run: |
          echo "payload:" > torrent.txt
          curl -sSL ${opencck_torrent} | grep -v '^#' | grep -v '^$' | while IFS= read -r domain; do
            if [[ $domain =~ ^www\. ]]; then
              echo "  - '${domain}'" >> torrent.txt
              echo "  - '+.${domain#www.}'" >> torrent.txt
            else
              echo "  - '+.${domain}'" >> torrent.txt
            fi
          done

      - name: Generate tools.txt file
        run: |
          echo "payload:" > tools.txt
          curl -sSL ${opencck_tools} | grep -v '^#' | grep -v '^$' | while IFS= read -r domain; do
            if [[ $domain =~ ^www\. ]]; then
              echo "  - '${domain}'" >> tools.txt
              echo "  - '+.${domain#www.}'" >> tools.txt
            else
              echo "  - '+.${domain}'" >> tools.txt
            fi
          done

      - name: Generate music.txt file
        run: |
          echo "payload:" > music.txt
          curl -sSL ${opencck_music} | grep -v '^#' | grep -v '^$' | while IFS= read -r domain; do
            if [[ $domain =~ ^www\. ]]; then
              echo "  - '${domain}'" >> music.txt
              echo "  - '+.${domain#www.}'" >> music.txt
            else
              echo "  - '+.${domain}'" >> music.txt
            fi
          done

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          cp *.txt ./publish/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done